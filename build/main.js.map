{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.6.5\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\nimport type { responseType } from './lib/types-d';\nimport { Library } from './lib/library';\nimport type { statesObjectsType } from './lib/definition';\nimport { statesObjects } from './lib/definition';\nimport axios from 'axios';\n\n// Load your modules here, e.g.:\n// import * as fs from \"fs\";\n\nclass Tagesschau extends utils.Adapter {\n    library: Library;\n    public constructor(options: Partial<utils.AdapterOptions> = {}) {\n        super({\n            ...options,\n            name: 'tagesschau',\n        });\n        this.library = new Library(this);\n        this.on('ready', this.onReady.bind(this));\n        // this.on('stateChange', this.onStateChange.bind(this));\n        // this.on('objectChange', this.onObjectChange.bind(this));\n        // this.on('message', this.onMessage.bind(this));\n        this.on('unload', this.onUnload.bind(this));\n    }\n\n    /**\n     * Is called when databases are connected and adapter received configuration.\n     */\n    private async onReady(): Promise<void> {\n        // 1=Baden-W\u00FCrttemberg, 2=Bayern, 3=Berlin, 4=Brandenburg, 5=Bremen, 6=Hamburg, 7=Hessen, 8=Mecklenburg-Vorpommern, 9=Niedersachsen, 10=Nordrhein-Westfalen, 11=Rheinland-Pfalz, 12=Saarland, 13=Sachsen, 14=Sachsen-Anhalt, 15=Schleswig-Holstein, 16=Th\u00FCringen\n        //  inland, ausland, wirtschaft, sport, video, investigativ, wissen\n        await this.library.init();\n        await this.library.initStates(await this.getStatesAsync('*'));\n        const maxRegions = 16;\n        let regions = '';\n        for (let i = 1; i <= maxRegions; i++) {\n            const k = i.toString() as keyof typeof this.config;\n            regions += this.config[k] === true ? `${k},` : '';\n        }\n        if (regions.length === 0) {\n            this.log.warn('No regions selected! Adapter stopped!');\n            if (this.stop) {\n                await this.stop();\n            }\n            return;\n        }\n        let topics = [\n            'inland',\n            'ausland',\n            'wirtschaft',\n            'sport',\n            'video',\n            'investigativ',\n            'wissen',\n        ] as (keyof typeof this.config)[];\n        topics = topics.filter(topic => this.config[topic] === true);\n        if (topics.length === 0) {\n            this.log.warn('No topics selected! Adapter stopped!');\n            if (this.stop) {\n                await this.stop();\n            }\n            return;\n        }\n        for (const topic of topics) {\n            await this.library.writedp(topic, undefined, statesObjects[topic as keyof statesObjectsType]._channel);\n\n            const url = `https://www.tagesschau.de/api2u/news/?regions=${regions}&ressort=${topic}`;\n            try {\n                const response = await axios.get(url, { headers: { accept: 'application/json' } });\n                if (response.status === 200 && response.data) {\n                    this.log.debug(`Response: ${JSON.stringify(response.data)}`);\n                    const data: { [key: string]: responseType } = {};\n                    data[topic] = response.data as responseType;\n                    await this.library.writeFromJson(topic, topic, statesObjects, data, true);\n                }\n            } catch (e) {\n                this.log.error(`Error: ${e as string}`);\n            }\n        }\n        if (this.stop) {\n            await this.stop();\n        }\n    }\n\n    /**\n     * Is called when adapter shuts down - callback has to be called under any circumstances!\n     *\n     * @param callback\n     */\n    private onUnload(callback: () => void): void {\n        try {\n            callback();\n        } catch {\n            callback();\n        }\n    }\n}\n\nif (require.main !== module) {\n    // Export the constructor in compact mode\n    module.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Tagesschau(options);\n} else {\n    // otherwise start the instance directly\n    (() => new Tagesschau())();\n}\n\nexport = Tagesschau;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAMA,YAAuB;AAEvB,qBAAwB;AAExB,wBAA8B;AAC9B,mBAAkB;AAKlB,MAAM,mBAAmB,MAAM,QAAQ;AAAA,EACnC;AAAA,EACO,YAAY,UAAyC,CAAC,GAAG;AAC5D,UAAM;AAAA,MACF,GAAG;AAAA,MACH,MAAM;AAAA,IACV,CAAC;AACD,SAAK,UAAU,IAAI,uBAAQ,IAAI;AAC/B,SAAK,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AAIxC,SAAK,GAAG,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA,EAKA,MAAc,UAAyB;AAGnC,UAAM,KAAK,QAAQ,KAAK;AACxB,UAAM,KAAK,QAAQ,WAAW,MAAM,KAAK,eAAe,GAAG,CAAC;AAC5D,UAAM,aAAa;AACnB,QAAI,UAAU;AACd,aAAS,IAAI,GAAG,KAAK,YAAY,KAAK;AAClC,YAAM,IAAI,EAAE,SAAS;AACrB,iBAAW,KAAK,OAAO,CAAC,MAAM,OAAO,GAAG,CAAC,MAAM;AAAA,IACnD;AACA,QAAI,QAAQ,WAAW,GAAG;AACtB,WAAK,IAAI,KAAK,uCAAuC;AACrD,UAAI,KAAK,MAAM;AACX,cAAM,KAAK,KAAK;AAAA,MACpB;AACA;AAAA,IACJ;AACA,QAAI,SAAS;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AACA,aAAS,OAAO,OAAO,WAAS,KAAK,OAAO,KAAK,MAAM,IAAI;AAC3D,QAAI,OAAO,WAAW,GAAG;AACrB,WAAK,IAAI,KAAK,sCAAsC;AACpD,UAAI,KAAK,MAAM;AACX,cAAM,KAAK,KAAK;AAAA,MACpB;AACA;AAAA,IACJ;AACA,eAAW,SAAS,QAAQ;AACxB,YAAM,KAAK,QAAQ,QAAQ,OAAO,QAAW,gCAAc,KAAgC,EAAE,QAAQ;AAErG,YAAM,MAAM,iDAAiD,OAAO,YAAY,KAAK;AACrF,UAAI;AACA,cAAM,WAAW,MAAM,aAAAA,QAAM,IAAI,KAAK,EAAE,SAAS,EAAE,QAAQ,mBAAmB,EAAE,CAAC;AACjF,YAAI,SAAS,WAAW,OAAO,SAAS,MAAM;AAC1C,eAAK,IAAI,MAAM,aAAa,KAAK,UAAU,SAAS,IAAI,CAAC,EAAE;AAC3D,gBAAM,OAAwC,CAAC;AAC/C,eAAK,KAAK,IAAI,SAAS;AACvB,gBAAM,KAAK,QAAQ,cAAc,OAAO,OAAO,iCAAe,MAAM,IAAI;AAAA,QAC5E;AAAA,MACJ,SAAS,GAAG;AACR,aAAK,IAAI,MAAM,UAAU,CAAW,EAAE;AAAA,MAC1C;AAAA,IACJ;AACA,QAAI,KAAK,MAAM;AACX,YAAM,KAAK,KAAK;AAAA,IACpB;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOQ,SAAS,UAA4B;AACzC,QAAI;AACA,eAAS;AAAA,IACb,QAAQ;AACJ,eAAS;AAAA,IACb;AAAA,EACJ;AACJ;AAEA,IAAI,QAAQ,SAAS,QAAQ;AAEzB,SAAO,UAAU,CAAC,YAAuD,IAAI,WAAW,OAAO;AACnG,OAAO;AAEH,GAAC,MAAM,IAAI,WAAW,GAAG;AAC7B;AAEA,iBAAS;",
  "names": ["axios"]
}
