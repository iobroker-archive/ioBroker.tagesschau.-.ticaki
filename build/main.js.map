{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.6.5\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\nimport type { NewsEntity, responseType, videosType } from './lib/types-d';\nimport { Library } from './lib/library';\nimport {\n    filterPartOfNews,\n    genericStateObjects,\n    newsDefault,\n    statesObjects,\n    type statesObjectsType,\n} from './lib/definition';\nimport axios from 'axios';\naxios.defaults.timeout = 10000;\n\n// Load your modules here, e.g.:\n// import * as fs from \"fs\";\n\nclass Tagesschau extends utils.Adapter {\n    library: Library;\n    additionalConfig: { allTags: string[] } = { allTags: [] };\n    updateTimeout: ioBroker.Timeout | undefined = undefined;\n    topics = [\n        'inland',\n        'ausland',\n        'wirtschaft',\n        'sport',\n        'video',\n        'investigativ',\n        'wissen',\n    ] as (keyof typeof this.config)[];\n    regions = '';\n\n    breakingNewsDatapointExists = false;\n\n    public constructor(options: Partial<utils.AdapterOptions> = {}) {\n        super({\n            ...options,\n            name: 'tagesschau',\n        });\n        this.library = new Library(this);\n        this.on('ready', this.onReady.bind(this));\n        // this.on('stateChange', this.onStateChange.bind(this));\n        // this.on('objectChange', this.onObjectChange.bind(this));\n        this.on('message', this.onMessage.bind(this));\n        this.on('unload', this.onUnload.bind(this));\n    }\n\n    /**\n     * Is called when databases are connected and adapter received configuration.\n     */\n    private async onReady(): Promise<void> {\n        // 1=Baden-W\u00FCrttemberg, 2=Bayern, 3=Berlin, 4=Brandenburg, 5=Bremen, 6=Hamburg, 7=Hessen, 8=Mecklenburg-Vorpommern, 9=Niedersachsen, 10=Nordrhein-Westfalen, 11=Rheinland-Pfalz, 12=Saarland, 13=Sachsen, 14=Sachsen-Anhalt, 15=Schleswig-Holstein, 16=Th\u00FCringen\n        //  inland, ausland, wirtschaft, sport, video, investigativ, wissen\n        await this.library.init();\n        await this.library.initStates(await this.getStatesAsync('*'));\n        const maxRegions = 16;\n\n        this.config.interval =\n            (typeof this.config.interval !== 'number' || this.config.interval < 5 || this.config.interval > 100000\n                ? 30\n                : this.config.interval) * 60000;\n\n        this.log.info(`Set news interval to ${this.config.interval / 60000} minutes`);\n        let obj;\n        try {\n            obj = await this.getForeignObjectAsync(this.namespace);\n        } catch {\n            // ignore\n        }\n        if (!obj) {\n            await this.setForeignObject(this.namespace, {\n                type: 'meta',\n                common: { name: 'Tagesschau Instanze', type: 'meta.folder' },\n                native: {},\n            });\n        }\n        for (let i = 1; i <= maxRegions; i++) {\n            const k = `L${i.toString()}` as keyof typeof this.config;\n            this.regions += this.config[k] === true ? (this.regions ? ',' : '') + i : '';\n        }\n        if (this.regions.length === 0) {\n            this.log.warn('No regions selected! Adapter paused!');\n            return;\n        }\n\n        if (!this.config.selectedTags) {\n            this.config.selectedTags = [];\n        }\n        if (!this.config.maxEntries) {\n            this.config.maxEntries = 20;\n        }\n        if (!this.config.videosEnabled && !this.config.newsEnabled) {\n            this.log.warn('No news or videos selected! Adapter paused!');\n            return;\n        }\n        const topics = [\n            'inland',\n            'ausland',\n            'wirtschaft',\n            'sport',\n            'video',\n            'investigativ',\n            'wissen',\n        ] as (keyof typeof this.config)[];\n        this.topics = topics.filter(topic => this.config[topic] === true);\n        if (this.topics.length === 0) {\n            this.log.warn('No topics selected! Adapter stopped!');\n            if (this.stop) {\n                await this.stop();\n            }\n            return;\n        }\n        obj = await this.getForeignObjectAsync(this.namespace);\n        if (obj && obj.native && obj.native.additionalConfig) {\n            this.additionalConfig = obj.native.additionalConfig;\n        }\n        this.log.debug(`selectedTags: ${JSON.stringify(this.config.selectedTags)}`);\n\n        this.breakingNewsDatapointExists = !!this.library.readdb(`breakingNewsCount`);\n        if (!this.breakingNewsDatapointExists) {\n            await this.library.writedp(`breakingNewsCount`, 0, genericStateObjects.breakingNewsCount);\n            const data: { news?: [NewsEntity, NewsEntity, NewsEntity, NewsEntity, NewsEntity]; newsCount: number } = {\n                newsCount: 0,\n            };\n            data.news = [newsDefault, newsDefault, newsDefault, newsDefault, newsDefault];\n            await this.library.writeFromJson(`news.breakingNews`, `news.breakingNews`, statesObjects, data, true);\n        }\n        // start working\n\n        if (this.config.newsEnabled) {\n            await this.updateNews();\n        } else {\n            await this.library.garbageColleting(`news`, 60000, false);\n        }\n        if (this.config.videosEnabled) {\n            await this.updateVideos();\n        } else {\n            await this.library.garbageColleting(`videos`, 60000, false);\n        }\n        this.update();\n    }\n    update(): void {\n        this.updateTimeout = this.setTimeout(async () => {\n            if (this.config.newsEnabled) {\n                await this.updateNews();\n            }\n            if (this.config.videosEnabled) {\n                await this.updateVideos();\n            }\n            this.update();\n        }, 300000);\n    }\n\n    /**\n     * update news from tagesschau.\n     */\n    async updateNews(): Promise<void> {\n        const bnews: NewsEntity[] = [];\n        await this.library.writedp(`news`, undefined, statesObjects[`news` as keyof statesObjectsType]._channel);\n        for (const topic of this.topics) {\n            await this.library.writedp(\n                `news.${topic}`,\n                undefined,\n                //@ts-expect-error\n                statesObjects.news[topic]._channel,\n            );\n\n            const url = `https://www.tagesschau.de/api2u/news/?regions=${this.regions}&ressort=${topic}`;\n            this.log.debug(`URL: ${url}`);\n            try {\n                const response = await axios.get(url, { headers: { accept: 'application/json' } });\n                if (response.status === 200 && response.data) {\n                    this.log.debug(`Response: ${JSON.stringify(response.data)}`);\n                    const data = response.data as responseType;\n                    if (data.news) {\n                        for (const news of data.news) {\n                            if (news.tags) {\n                                for (const tag of news.tags) {\n                                    if (!(this.additionalConfig.allTags || []).includes(tag.tag)) {\n                                        this.additionalConfig.allTags.push(tag.tag);\n                                    }\n                                }\n                            }\n                        }\n                        if (this.config.selectedTags && this.config.selectedTags.length !== 0) {\n                            data.news = data.news.filter(\n                                news =>\n                                    (news.tags && news.tags.some(tag => this.config.selectedTags.includes(tag.tag))) ||\n                                    news.breakingNews,\n                            );\n                        }\n                        data.news = data.news.slice(0, this.config.maxEntries);\n                        data.newsCount = data.news.length;\n                        for (const news of data.news) {\n                            for (const key of filterPartOfNews) {\n                                const k = key as keyof NewsEntity;\n                                delete news[k];\n                            }\n                            if (news.date) {\n                                news.jsDate = new Date(news.date).getTime();\n                            }\n\n                            //this.log.debug(`News: ${JSON.stringify(news)}`);\n                            if (news.breakingNews) {\n                                bnews.push(news);\n                            }\n                        }\n                    }\n\n                    await this.library.writeFromJson(`news.${topic}`, `news.${topic}`, statesObjects, data, true);\n                    await this.library.garbageColleting(`news.${topic}`, 60000, true);\n                }\n                const obj = await this.getForeignObjectAsync(this.namespace);\n                if (obj) {\n                    obj.native = obj.native || {};\n                    obj.native.additionalConfig = this.additionalConfig;\n                    await this.setForeignObject(this.namespace, obj);\n                }\n                await this.library.writedp(`breakingNewsCount`, bnews.length, genericStateObjects.breakingNewsCount);\n                const data: { news: NewsEntity[]; newsCount: number } = { news: bnews, newsCount: bnews.length };\n                await this.library.writeFromJson(`news.breakingNews`, `news.breakingNews`, statesObjects, data, true);\n            } catch (e) {\n                this.log.error(`Error: ${e as string}`);\n            }\n        }\n    }\n\n    async updateVideos(): Promise<void> {\n        await this.library.writedp(`videos`, undefined, statesObjects.videos._channel);\n        const url = `https://www.tagesschau.de/api2u/channels`;\n        this.log.debug(`URL: ${url}`);\n        try {\n            const response = await axios.get(url, { headers: { accept: 'application/json' } });\n            if (response.status === 200 && response.data) {\n                this.log.debug(`Response: ${JSON.stringify(response.data)}`);\n                const data = response.data as videosType;\n                data.channels = data.channels.slice(0, this.config.maxEntries);\n                for (const news of data.channels) {\n                    if (news.date) {\n                        news.jsDate = new Date(news.date).getTime();\n                    }\n                    if (news.tracking) {\n                        delete news.tracking;\n                    }\n                }\n                await this.library.writeFromJson(`videos`, `videos`, statesObjects, data, true);\n                await this.library.garbageColleting(`videos`, 60000, true);\n            }\n        } catch (e) {\n            this.log.error(`Error: ${e as string}`);\n        }\n    }\n\n    private onMessage(obj: ioBroker.Message): void {\n        if (typeof obj === 'object' && obj.message) {\n            if (obj.command === 'selectNewsTags') {\n                const json = this.additionalConfig.allTags.map(tag => {\n                    const r = { value: '', label: '' };\n                    r.value = tag;\n                    r.label = tag;\n                    return r;\n                });\n                json.sort((a, b) => (a.label > b.label ? 1 : -1));\n                this.sendTo(obj.from, obj.command, json, obj.callback);\n            }\n\n            this.sendTo(obj.from, obj.command, 'Message received', obj.callback);\n        }\n    }\n\n    /**\n     * Is called when adapter shuts down - callback has to be called under any circumstances!\n     *\n     * @param callback Callback function\n     */\n    private onUnload(callback: () => void): void {\n        try {\n            if (this.updateTimeout) {\n                this.clearTimeout(this.updateTimeout);\n            }\n            callback();\n        } catch {\n            callback();\n        }\n    }\n}\n\nif (require.main !== module) {\n    // Export the constructor in compact mode\n    module.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Tagesschau(options);\n} else {\n    // otherwise start the instance directly\n    (() => new Tagesschau())();\n}\n\nexport = Tagesschau;\n"],
  "mappings": "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",
  "names": ["axios", "data"]
}
