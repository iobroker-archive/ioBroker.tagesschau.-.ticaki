{
  "version": 3,
  "sources": ["../../src/lib/definition.ts"],
  "sourcesContent": ["import type { NewsEntity } from './types-d';\n\nexport type ChangeTypeToChannelAndState5<Obj> = Obj extends object\n    ? {\n          [K in keyof Obj]-?: ChangeTypeToChannelAndState<Obj[K]>;\n      } & customChannelType\n    : ioBroker.StateObject;\n\nexport type ChangeTypeToChannelAndState<Obj> = Obj extends object\n    ? Obj extends Array<infer U>\n        ? { [key: string]: ChangeTypeToChannelAndState<U> }\n        : {\n              [K in keyof Obj]-?: ChangeTypeToChannelAndState<Obj[K]>;\n          } & customChannelType\n    : ioBroker.StateObject;\n\nexport type ChangeToChannel<Obj, T> = Obj extends object\n    ? { [K in keyof Obj]-?: customChannelType & T }\n    : ioBroker.StateObject;\n\nexport type ChangeTypeOfKeys<Obj, N> = Obj extends object ? { [K in keyof Obj]-?: ChangeTypeOfKeys<Obj[K], N> } : N;\n\nexport type customChannelType = {\n    _channel: ioBroker.ChannelObject | ioBroker.DeviceObject;\n};\n\nexport const defaultChannel: ioBroker.ChannelObject = {\n    _id: '',\n    type: 'channel',\n    common: {\n        name: 'Hey no description... ',\n    },\n    native: {},\n};\n\nexport const genericStateObjects: {\n    default: ioBroker.StateObject;\n    customString: ioBroker.StateObject;\n    online: ioBroker.StateObject;\n    json: ioBroker.StateObject;\n    settings: ioBroker.FolderObject;\n    global: ioBroker.FolderObject;\n    breakingNewsArray: ioBroker.StateObject;\n    breakingNewsCount: ioBroker.StateObject;\n    checkOnline: ioBroker.StateObject;\n} = {\n    default: {\n        _id: 'No_definition',\n        type: 'state',\n        common: {\n            name: 'genericStateObjects.state',\n            type: 'string',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    breakingNewsCount: {\n        _id: '',\n        type: 'state',\n        common: {\n            name: 'Anzahl der Breaking News',\n            type: 'number',\n            role: 'value',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    breakingNewsArray: {\n        _id: '',\n        type: 'state',\n        common: {\n            name: 'Array das auf die Breaking News zeigt',\n            type: 'string',\n            role: 'json',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    customString: {\n        _id: 'User_State',\n        type: 'state',\n        common: {\n            name: 'genericStateObjects.customString',\n            type: 'string',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    online: {\n        _id: '',\n        type: 'state',\n        common: {\n            name: 'genericStateObjects.online',\n            type: 'boolean',\n            role: 'indicator.connected',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    json: {\n        _id: '',\n        type: 'state',\n        common: {\n            name: 'genericStateObjects.json',\n            type: 'string',\n            role: 'json',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    settings: {\n        _id: '',\n        type: 'folder',\n        common: {\n            name: 'settings.folder',\n        },\n        native: {},\n    },\n    global: {\n        _id: '',\n        type: 'folder',\n        common: {\n            name: 'settings.global',\n        },\n        native: {},\n    },\n    checkOnline: {\n        _id: '',\n        type: 'state',\n        common: {\n            name: 'genericStateObjects.checkOnline',\n            type: 'boolean',\n            role: 'switch',\n            read: true,\n            write: true,\n        },\n        native: {},\n    },\n};\n\nexport type statesObjectsType = {\n    news: customChannelType & {\n        inland: customChannelType;\n        ausland: customChannelType;\n        wirtschaft: customChannelType;\n        sport: customChannelType;\n        video: customChannelType;\n        investigativ: customChannelType;\n        wissen: customChannelType;\n        breakingNews: customChannelType;\n    };\n    videos: customChannelType & {\n        channels: customChannelType;\n    };\n};\n\nexport const statesObjects: statesObjectsType = {\n    videos: {\n        _channel: {\n            _id: '',\n            type: 'channel',\n            common: {\n                name: 'Nachrichtenvideos',\n            },\n            native: {},\n        },\n        channels: {\n            _channel: {\n                _id: '',\n                type: 'channel',\n                common: {\n                    name: 'Nachrichtenkanal',\n                },\n                native: {},\n            },\n        },\n    },\n    news: {\n        _channel: {\n            _id: '',\n            type: 'channel',\n            common: {\n                name: 'Nachrichten',\n            },\n            native: {},\n        },\n        breakingNews: {\n            _channel: {\n                _id: '',\n                type: 'channel',\n                common: {\n                    name: 'Breaking News',\n                },\n                native: {},\n            },\n        },\n        inland: {\n            _channel: {\n                _id: '',\n                type: 'channel',\n                common: {\n                    name: 'Inlandsnachrichten',\n                },\n                native: {},\n            },\n        },\n        ausland: {\n            _channel: {\n                _id: '',\n                type: 'channel',\n                common: {\n                    name: 'Auslandsnachrichten',\n                },\n                native: {},\n            },\n        },\n        wirtschaft: {\n            _channel: {\n                _id: '',\n                type: 'channel',\n                common: {\n                    name: 'Wirtschaftsnachrichten',\n                },\n                native: {},\n            },\n        },\n        sport: {\n            _channel: {\n                _id: '',\n                type: 'channel',\n                common: {\n                    name: 'Sportnachrichten',\n                },\n                native: {},\n            },\n        },\n        video: {\n            _channel: {\n                _id: '',\n                type: 'channel',\n                common: {\n                    name: 'Videos',\n                },\n                native: {},\n            },\n        },\n        investigativ: {\n            _channel: {\n                _id: '',\n                type: 'channel',\n                common: {\n                    name: 'Investigative Nachrichten',\n                },\n                native: {},\n            },\n        },\n        wissen: {\n            _channel: {\n                _id: '',\n                type: 'channel',\n                common: {\n                    name: 'Wissensnachrichten',\n                },\n                native: {},\n            },\n        },\n    },\n};\n\nexport const filterPartOfNews: string[] = ['tracking', 'regionId', 'regionIds', 'geotags'];\n\nexport const Defaults = {\n    state: {\n        _id: 'No_definition',\n        type: 'state',\n        common: {\n            name: 'No definition',\n\n            type: 'string',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n};\n\nexport const newsDefault: NewsEntity = {\n    sophoraId: '',\n    externalId: '',\n    title: '',\n    date: '',\n    teaserImage: {\n        alttext: '',\n        imageVariants: {\n            '1x1-144': '',\n            '1x1-256': '',\n            '1x1-432': '',\n            '1x1-640': '',\n            '1x1-840': '',\n            '16x9-256': '',\n            '16x9-384': '',\n            '16x9-512': '',\n            '16x9-640': '',\n            '16x9-960': '',\n            '16x9-1280': '',\n            '16x9-1920': '',\n        },\n        type: '',\n    },\n    tags: [\n        {\n            tag: '',\n        },\n        {\n            tag: '',\n        },\n        {\n            tag: '',\n        },\n        {\n            tag: '',\n        },\n    ],\n    updateCheckUrl: '',\n    topline: '',\n    firstSentence: '',\n    details: '',\n    detailsweb: '',\n    shareURL: '',\n    geotags: [],\n    regionId: 0,\n    regionIds: [],\n    ressort: '',\n    breakingNews: false,\n    type: '',\n};\n"],
  "mappings": "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",
  "names": []
}
